matrix world;
matrix view;
matrix proj;

float4x3 bones[33];

struct VS_INPUT
{
    vector position : POSITION;
    float3 normal   : NORMAL;
    vector diffuse  : COLOR;
    int4 indices    : BLENDINDICES;
    float4 weights  : BLENDWEIGHT;
};

struct VS_OUTPUT
{
    vector position : POSITION;
    vector diffuse  : COLOR;
    float3 wpos     : TEXCOORD0;
    float3 normal   : TEXCOORD1;
};

float3 light;

VS_OUTPUT main(VS_INPUT input)
{
    VS_OUTPUT output = (VS_OUTPUT)0;

    float4x3 skinning = 0;
    skinning += bones[input.indices[0]] * input.weights[0];
    skinning += bones[input.indices[1]] * input.weights[1];

    float4 skinned = float4(mul(input.position, skinning), 1);

    output.position = mul(skinned, mul(mul(world, view), proj));
    output.wpos = mul(skinned, world).xyz;
    output.normal = mul(mul(input.normal, (float3x3)skinning), (float3x3)world);

    output.diffuse = input.diffuse;
    output.diffuse.a = 1;

    return output;
}
